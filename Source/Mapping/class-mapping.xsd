<?xml version="1.0" encoding="utf-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:gda-mapping-1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="gda-mapping">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="modelsNamespace" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="namespace">
								<xs:complexType>
									<xs:attribute name="assembly" type="xs:string" use="required" />
									<xs:attribute name="name" type="xs:string" use="required" />
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="generateKeyHandler" minOccurs="0">
					<xs:complexType>
						<xs:attribute name="classType" type="xs:string" use="required" />
						<xs:attribute name="methodName" type="xs:string" use="required" />
					</xs:complexType>
				</xs:element>
        <xs:element name="references" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="reference">
                <xs:complexType>
                  <xs:attribute name="assemblyName" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>
                        Nome do assembly onde o mapeamento está inserido.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="resourceName" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>
                        Nome do resource do mapeamento.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="fileName" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>
                        Arquivo aonde o mapemento está inserido.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
				<xs:element name="generatorsKey" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="generator">
								<xs:complexType>
									<xs:attribute name="name" type="xs:string" use="required" />
									<xs:attribute name="classType" type="xs:string" use="required" />
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="class" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="provider" minOccurs="0" maxOccurs="1">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="connectionString" minOccurs="0" maxOccurs="1" />
									</xs:sequence>
									<xs:attribute name="name" type="xs:string" use="optional" />
									<xs:attribute name="configurationName" type="xs:string" use="required" />
								</xs:complexType>
							</xs:element>
							<xs:element name="baseDAO" minOccurs="0" maxOccurs="1">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="genericType" minOccurs="0" maxOccurs="unbounded">
											<xs:complexType>
												<xs:attribute name="name" type="xs:string" use="required" />
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="name" type="xs:string" use="required" />
								</xs:complexType>
							</xs:element>
							<xs:element name="property" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="generator" minOccurs="0" maxOccurs="1">
											<xs:complexType>
												<xs:attribute name="name" type="xs:string" use="required" />
											</xs:complexType>
										</xs:element>
										<xs:element name="foreignKey" minOccurs="0" maxOccurs="1">
											<xs:complexType>
												<xs:attribute name="typeOfClassRelated" type="xs:string" use="required" />
												<xs:attribute name="propertyName" type="xs:string" use="required" />
												<xs:attribute name="groupOfRelationship" type="xs:unsignedByte" use="optional" />
											</xs:complexType>
										</xs:element>
										<xs:element name="foreignMember" minOccurs="0" maxOccurs="1">
											<xs:complexType>
												<xs:attribute name="typeOfClassRelated" type="xs:string" use="required" />
												<xs:attribute name="propertyName" type="xs:string" use="required" />
												<xs:attribute name="groupOfRelationship" type="xs:unsignedByte" use="optional" />
											</xs:complexType>
										</xs:element>
										<xs:element name="validator" minOccurs="0" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="param" minOccurs="0" maxOccurs="unbounded">
														<xs:complexType>
															<xs:simpleContent>
																<xs:extension base="xs:string">
																	<xs:attribute name="name" type="xs:string" use="required" />
																</xs:extension>
															</xs:simpleContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="message" type="xs:string" minOccurs="0" maxOccurs="1">
													</xs:element>
												</xs:sequence>
												<xs:attribute name="name" type="xs:string" use="required" />
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="name" type="xs:string" use="required" />
									<xs:attribute name="column" type="xs:string" use="optional" />
									<xs:attribute name="parameterType" use="optional">
										<xs:simpleType>
											<xs:restriction base="xs:token">
												<xs:enumeration value="Field">
													<xs:annotation>
														<xs:documentation>Idetifica um campo normal.</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="Key" />
												<xs:enumeration value="IdentityKey" />
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="size" type="xs:int" use="optional" />
									<xs:attribute name="direction" use="optional">
										<xs:simpleType>
											<xs:restriction base="xs:token">
												<xs:enumeration value="Output">
													<xs:annotation>
														<xs:documentation>
															Identifica que o valor deverá apenas ser enviando para a base de dados.
														</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="Input">
													<xs:annotation>
														<xs:documentation>
															Identifica que o valor deverá apenas ser recuperado da base de dados.
														</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="InputOutput">
													<xs:annotation>
														<xs:documentation>
															Identifica que o valor poderá ser enviado ou recuperado da base de dados.
														</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="OutputOnlyInsert">
													<xs:annotation>
														<xs:documentation>
															O parametro é inserido apenas pelo comando insert, mas ele também pode ser considerado como um Input.
														</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="OnlyInsert">
													<xs:annotation>
														<xs:documentation>
															O parametro é inserido apenas pelo comando insert
														</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="InputOptionalOutput">
													<xs:annotation>
														<xs:documentation>
															O parametro busca o valor se ele existir no resultado, e ele se comportar da mesma forma que o parametro Output.
														</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="InputOptional">
													<xs:annotation>
														<xs:documentation>
															O parametro busca o valor se ele existir no resultado.
														</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
												<xs:enumeration value="InputOptionalOutputOnlyInsert">
													<xs:annotation>
														<xs:documentation>
															O parametro busca o valor se ele existir no resultado, e ele se comportar da mesma forma que o
															parametro Output que é inserido apenas pelo comando insert.
														</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="not-null" type="xs:boolean" use="optional" />
									<xs:attribute name="not-persists" type="xs:boolean" use="optional" />
									<xs:attribute name="unique" type="xs:boolean" use="optional" />
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="name" type="xs:string" use="required" />
						<xs:attribute name="table" type="xs:string" use="optional" />
						<xs:attribute name="schema" type="xs:string" use="optional"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="sql-query" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="parameters" minOccurs="0" maxOccurs="1">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="param">
											<xs:complexType>
												<xs:attribute name="name" type="xs:string" use="required" />
												<xs:attribute name="type" type="xs:string" use="optional" />
												<xs:attribute name="defaultValue" type="xs:string" use="optional">
													<xs:annotation>
														<xs:documentation>
															Valor padrão do atributo.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="return" minOccurs="0" maxOccurs="1">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="return-property" minOccurs="0">
											<xs:complexType>
												<xs:attribute name="name" type="xs:string" use="required" />
												<xs:attribute name="column" type="xs:string" use="optional" />
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="class" type="xs:string" use="optional" 	/>
								</xs:complexType>
							</xs:element>
							<xs:element name="commandText" minOccurs="1" maxOccurs="1">
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string">
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="name" type="xs:string" use="required" />
						<xs:attribute name="use-database-schema" type="xs:boolean" use="optional" default="true" />
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="namespace" type="xs:string" use="required" />
			<xs:attribute name="assembly" type="xs:string" use="required" />
      <xs:attribute name="defaultProviderName" type="xs:string" use="optional" />
      <xs:attribute name="defaultProviderConfigurationName" type="xs:string" use="optional" />
      <xs:attribute name="defaultConnectionString" type="xs:string" use="optional" />
      <xs:attribute name="defaultSchema" type="xs:string" use="optional" />
		</xs:complexType>
	</xs:element>
</xs:schema>