using System;
using System.Collections.Generic;
using System.Text;
using GDA.Analysis;
using System.Data;
namespace GDA.Provider.MsSql
{
	public class MsSqlAnalyzer : MsSql92Analyzer
	{
		public MsSqlAnalyzer (MsSqlProviderConfiguration a) : base (a)
		{
		}
		public override void Analyze (string a)
		{
			base.Analyze (a);
			foreach (TableMap map in tablesMaps.Values) {
				GetIdentityInformation (map);
			}
		}
		public override void Analyze (string a, string b)
		{
			base.Analyze (a, b);
			foreach (TableMap map in tablesMaps.Values) {
				GetIdentityInformation (map);
			}
		}
		protected void GetIdentityInformation (TableMap a)
		{
			if (a != null) {
				IDbConnection b = ProviderConfiguration.CreateConnection ();
				GDAConnectionManager.NotifyConnectionCreated (b);
				IDbCommand c = b.CreateCommand ();
				c.Connection = b;
				if (b.State != ConnectionState.Open) {
					b.Open ();
					GDAConnectionManager.NotifyConnectionOpened (b);
				}
				try {
					foreach (FieldMap fm in a.Fields) {
						if (fm.IsPrimaryKey) {
							if (!a.IsView) {
								c.CommandText = String.Format ("select COLUMNPROPERTY(OBJECT_ID('{0}'), '{1}', 'IsIdentity') as IsIdentity ", a.TableName, fm.ColumnName);
								using (IDataReader d = c.ExecuteReader ()) {
									if (d.Read ())
										fm.IsAutoGenerated = (d ["IsIdentity"].ToString () == "1");
								}
							}
						}
					}
				}
				catch (Exception ex) {
					GDAOperations.CallDebugTrace (this, String.Format ("Unable to determine whether PK column of table {0} is an identity column.", a.TableName));
					GDAOperations.CallDebugTrace (this, ex.Message);
				}
				finally {
					b.Close ();
					b.Dispose ();
				}
			}
		}
	}
}
